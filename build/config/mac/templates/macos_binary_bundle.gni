import("//build/config/mac/templates/merge_plist.gni")

template("macos_binary_bundle") {
  _output_name = target_name
  if (defined(invoker.output_name)) {
    _output_name = invoker.output_name
  }

  _display_name = _output_name
  if (defined(invoker.display_name)) {
    _display_name = invoker.display_name
  }

  _plist_target = target_name + "_plist"
  _plist_bundle = target_name + "_plist_bundle"

  merge_plist(_plist_target) {
    substitutions = {
      DEVELOPMENT_LANGUAGE = "en"
      EXECUTABLE_NAME = "$_output_name"
      PRODUCT_BUNDLE_IDENTIFIER = invoker.bundle_identifier
      PRODUCT_BUNDLE_PACKAGE_TYPE = invoker.bundle_type
      PRODUCT_NAME = "$_display_name"
    }

    # format = "binary1"
    format = "xml1"
    output = "$target_out_dir/$_plist_target/Info.plist"
    plists = [
      # get_label_info("//build/config/mac:compiler_plist", "target_out_dir") +
      #     "/compiler_plist/Info.plist",
      "//build/config/mac/resources/Info.plist",
    ]

    if (defined(invoker.info_plist)) {
      plists += [ invoker.info_plist ]
    }

    # deps = [ "//build/config/mac:compiler_plist" ]
  }

  bundle_data(_plist_bundle) {
    public_deps = [ ":$_plist_target" ]
    sources = [ "$target_out_dir/$_plist_target/Info.plist" ]
    outputs = [ "{{bundle_contents_dir}}/Info.plist" ]
  }

  create_bundle(target_name) {
    forward_variables_from(invoker,
                           "*",
                           [
                             "display_name",
                             "output_name",
                             "bundle_type",
                           ])

    if (!defined(public_deps)) {
      public_deps = []
    }
    public_deps += [ ":$_plist_bundle" ]
    bundle_root_dir = "$root_out_dir/$_output_name.app"

    bundle_contents_dir = "${bundle_root_dir}/Contents"
    bundle_resources_dir = "${bundle_contents_dir}/Resources"
    bundle_executable_dir = "${bundle_contents_dir}/MacOS"
  }
}
